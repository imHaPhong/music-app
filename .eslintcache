[{"D:\\workspace\\FE\\my-app\\src\\index.js":"1","D:\\workspace\\FE\\my-app\\src\\App.js":"2","D:\\workspace\\FE\\my-app\\src\\reportWebVitals.js":"3","D:\\workspace\\FE\\my-app\\src\\components\\Player.js":"4","D:\\workspace\\FE\\my-app\\src\\components\\Song.js":"5","D:\\workspace\\FE\\my-app\\src\\util.js":"6","D:\\workspace\\FE\\my-app\\src\\components\\Libary.js":"7","D:\\workspace\\FE\\my-app\\src\\components\\Libary-song.js":"8"},{"size":410,"mtime":1608475927439,"results":"9","hashOfConfig":"10"},{"size":673,"mtime":1608564052636,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2511,"mtime":1608562279034,"results":"13","hashOfConfig":"10"},{"size":307,"mtime":1608539203406,"results":"14","hashOfConfig":"10"},{"size":3146,"mtime":1608564855300,"results":"15","hashOfConfig":"10"},{"size":492,"mtime":1608564257943,"results":"16","hashOfConfig":"10"},{"size":582,"mtime":1608564406789,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14gwxid",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\FE\\my-app\\src\\index.js",[],["37","38"],"D:\\workspace\\FE\\my-app\\src\\App.js",["39"],"import React, { useState } from 'react';\nimport './style/app.scss'\n\n// adiding\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport Liabry from './components/Libary'\n\nimport data from './util';\n\nfunction App() {\n\n  const [songs, setSong] = useState(data())\n  const [currentSong, setCurrentSong] = useState(songs[0])\n  const [isPlaying, setIsPlaying] = useState(false)\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong} />\n      <Player isPlaying={isPlaying} setIsPlaying={setIsPlaying} currentSong={currentSong} />\n      <Liabry songs={songs} setCurrentSong={setCurrentSong} />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\workspace\\FE\\my-app\\src\\reportWebVitals.js",[],"D:\\workspace\\FE\\my-app\\src\\components\\Player.js",["40"],"import React, { useState, useRef } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Player = ({ currentSong, isPlaying, setIsPlaying }) => {\r\n    // userRef\r\n    const audioRef = useRef(null)\r\n    const playRef = useRef(null)\r\n    //Event handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying)\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n    }\r\n\r\n    const timeUpdateHandler = (e) => {\r\n        const current = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        setSongInfo({ ...songInfo, currentTime: current, duration })\r\n    }\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        )\r\n    }\r\n\r\n    // State \r\n    const [songInfo, setSongInfo] = useState({\r\n        currentTime: 0,\r\n        duration: 0,\r\n    })\r\n\r\n    const forwardHandler = () => {\r\n        if (songInfo.currentTime < songInfo.duration) {\r\n            setSongInfo({ ...songInfo, currentTime: songInfo.currentTime + 10 })\r\n        } else {\r\n            setSongInfo({ ...songInfo, currentTime: songInfo.duration })\r\n        }\r\n    }\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({ ...songInfo, currentTime: e.target.value })\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <input onChange={dragHandler} min={0} max={songInfo.duration} value={songInfo.currentTime} type=\"range\" />\r\n                <p>{getTime(songInfo.duration)}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon className=\"skip-back\" icon={faAngleLeft} size='2x' />\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" icon={isPlaying ? faPause : faPlay} size='2x' />\r\n                <FontAwesomeIcon onClick={forwardHandler} className=\"skip-forward\" icon={faAngleRight} size='2x' />\r\n            </div>\r\n            <audio onLoadedMetadata={timeUpdateHandler} onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","D:\\workspace\\FE\\my-app\\src\\components\\Song.js",[],"D:\\workspace\\FE\\my-app\\src\\util.js",[],"D:\\workspace\\FE\\my-app\\src\\components\\Libary.js",[],"D:\\workspace\\FE\\my-app\\src\\components\\Libary-song.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":13,"column":17,"nodeType":"47","messageId":"48","endLine":13,"endColumn":24},{"ruleId":"45","severity":1,"message":"49","line":10,"column":11,"nodeType":"47","messageId":"48","endLine":10,"endColumn":18},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'setSong' is assigned a value but never used.","Identifier","unusedVar","'playRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]